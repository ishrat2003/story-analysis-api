AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  story-survey-api

  Sample SAM Template for story-survey-api

Parameters:
  TABLE_NAME:
    Default: "localstoryreview"
    Type: AWS::SSM::Parameter::Value<String>
    Description: (Required) The name of the new DynamoDB table you want to create and save to. Minimum 3 characters

  ENVIRONMENT_NAME:
    Description: Environment name
    Type: AWS::SSM::Parameter::Value<String>
    Default: "local"
  
  DYNAMODB_ENDPOINT:
    Description: DynamoDb endpoint
    Type: AWS::SSM::Parameter::Value<String>
    Default: "https://dynamodb.eu-west-1.amazonaws.com" 
    
  DEFAULT_DYNAMODB_ENDPOINT:
    Description: DynamoDb endpoint
    Type: AWS::SSM::Parameter::Value<String>
    Default: "http://host.docker.internal:8000"
    
  S3_ENDPOINT:
    Description: S3 endpoint
    Type: AWS::SSM::Parameter::Value<String>
    Default: "http://host.docker.internal:4566"

  TOPICS_LIMIT:
    Description: Topics limit
    Type: AWS::SSM::Parameter::Value<String>
    Default: 100

  REGION:
    Description: Region
    Type: AWS::SSM::Parameter::Value<String>
    Default: "eu-west-1"

  GOOGLE_KNOWLEDGE_GRAPH:
    Description: Google Knowledge Graph Api Key
    Type: AWS::SSM::Parameter::Value<String>
    Default: "AIzaSyDeBUKPWbaGd3B6oWYg4ZMzK9FXgg4jlAM"

  TIMEOUT:
    Description: Timeout
    Type: AWS::SSM::Parameter::Value<String>
    Default: 3600

# More info about Globals: 
Globals:
  Function:
    # Properties of AWS::Serverless::Function
    Timeout: 3600
    Environment:
      Variables:
        API_NAME: story_survey_api
        ENVIRONMENT_NAME: !Ref ENVIRONMENT_NAME
        DYNAMODB_ENDPOINT: !Ref DYNAMODB_ENDPOINT
        DEFAULT_DYNAMODB_ENDPOINT: !Ref DEFAULT_DYNAMODB_ENDPOINT
        TABLE_NAME: !Ref TABLE_NAME
        GOOGLE_KNOWLEDGE_GRAPH: !Ref GOOGLE_KNOWLEDGE_GRAPH
        S3_ENDPOINT: !Ref S3_ENDPOINT
        REGION: !Ref REGION
        TIMEOUT: !Ref TIMEOUT
  Api:
    # Properties of AWS::Serverless::Api
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
    
Resources:
  DynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: 
        REF: TABLE_NAME
      AttributeDefinitions:
        - AttributeName: story_link
          AttributeType: S
        - AttributeName: user_code
          AttributeType: S
      KeySchema:
        - AttributeName: story_link
          KeyType: "HASH"
        - AttributeName: user_code
          KeyType: "HASH"
      ProvisionedThroughput: 
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  SurveyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: survey/
      Handler: app.save_handler
      Runtime: python3.8
      Layers:
        - arn:aws:lambda:eu-west-1:540686626730:layer:StoryLayer:6
      Policies:
        - DynamoDBCrudPolicy:
            TableName: 
              REF: TABLE_NAME
      Events:
        survey:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /survey
            Method: post
            

  LcFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: lc/
      Handler: app.lambda_lc_handler
      Layers:
        - arn:aws:lambda:eu-west-1:540686626730:layer:StoryLayer:10
      Runtime: python3.8
      Events:
        lc:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /lc
            Method: post


  TopicFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: topic/
      Handler: app.lambda_topic_handler
      Layers:
        - arn:aws:lambda:eu-west-1:540686626730:layer:StoryLayer:10
      Runtime: python3.8
      Events:
        topic:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /topic
            Method: post

  TermboardFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: termboard/
      Handler: app.lambda_termboard_handler
      Layers:
        - arn:aws:lambda:eu-west-1:540686626730:layer:StoryLayer:10
      Runtime: python3.8
      Events:
        termboard:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /termboard
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  LcApi:
    Description: "API Gateway endpoint URL for Prod stage for LC function"
    Value: "https://story-analysis-api.execute-api.eu-west-1.amazonaws.com/lc/"
  LcFunction:
    Description: "Lc Lambda Function ARN"
    Value: 
      GETATT: LcFunction.Arn
  LcIamRole:
    Description: "Implicit IAM Role created for Lc function"
    Value:
      GETATT: LcIamRole.IamRoleArn

  SurveyApi:
    Description: "API Gateway endpoint URL for Prod stage for  Survey function"
    Value: "https://story-analysis-api.execute-api.eu-west-1.amazonaws.com/survey/"
  SurveyFunction:
    Description: "Survey Lambda Function ARN"
    Value:
      GETATT: SurveyFunction.Arn
  SurveyIamRole:
    Description: "Implicit IAM Role created for Survey function"
    Value:
      GETATT: SurveyIamRole.IamRoleArn

  TopicApi:
    Description: "API Gateway endpoint URL for Prod stage for  Topic function"
    Value: "https://story-analysis-api.execute-api.eu-west-1.amazonaws.com/topic/"
  TopicFunction:
    Description: "Topic Lambda Function ARN"
    Value:
      GETATT: TopicFunction.Arn
  TopicIamRole:
    Description: "Implicit IAM Role created for Survey function"
    Value:
      GETATT: TopicIamRole.IamRoleArn

  TermboardApi:
    Description: "API Gateway endpoint URL for Prod stage for  Topic function"
    Value: "https://story-analysis-api.execute-api.eu-west-1.amazonaws.com/termboard/"
  TermboardFunction:
    Description: "Topic Lambda Function ARN"
    Value:
      GETATT: TermboardFunction.Arn
  TermboardIamRole:
    Description: "Implicit IAM Role created for Survey function"
    Value:
      GETATT: TermboardIamRole.IamRoleArn
